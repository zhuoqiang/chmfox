import string, sys, os
from platform import system

Import('platform_name')

libs = []

if system() == 'Linux':
    cxxflags = ['-Wall', '-O2',
                '-fno-rtti', '-fno-exceptions',
                '-Wconversion',
                '-Wpointer-arith',
                '-Wcast-align',
                '-Woverloaded-virtual',
                '-Wsynth',
                '-Wno-ctor-dtor-privacy',
                '-Wno-non-virtual-dtor',
                '-Wno-long-long',
                '-pedantic',
                '-fshort-wchar',
                '-pthread', '-pipe']

elif system() == 'Darwin':
    cxxflags = []

elif system() == 'Windows':
    cxxflags = ['/D', 'WIN32', '/D', 'XP_WIN', '/nologo', '/MT', '/O2']

elif system() == 'FreeBSD':
    cxxflags = ['-DOSTYPE="FreeBSD7"',
                '-DOSARCH=FreeBSD',
                '-Wall', '-O2',
                '-fPIC', '-fno-rtti', '-fno-exceptions',
                '-fno-strict-aliasing', '-pipe', '-fshort-wchar',
                '-Wconversion', '-Wpointer-arith',
                '-Woverloaded-virtual', '-Wsynth',
                '-Wno-ctor-dtor-privacy', '-Wno-non-virtual-dtor',
                '-Wcast-align', '-Wno-long-long',
                '-DNDEBUG', '-DTRIMMED',]
    

env = Environment(LIBS = libs,
                  CXXFLAGS= cxxflags)


libchmfox = env.SharedLibrary('#lib/%s/libchmfox' % platform_name,
                              ['chm_lib.c', 'lzx.c', 'export.c', 'extra.c'])

env.Alias('binary', libchmfox)

xpts = []
Return('xpts')
